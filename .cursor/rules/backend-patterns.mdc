# Backend/Server Patterns

## Server Structure
- Hono server with tRPC integration
- Drizzle ORM for database operations
- Better Auth for authentication
- PostgreSQL database with Docker

## Database Patterns
- Use Drizzle ORM for all database operations
- UUID generation should be handled by database server, not client-side
- Follow schema patterns from [apps/server/src/db/schema/auth.ts](mdc:apps/server/src/db/schema/auth.ts)
- Use proper foreign key relationships with cascade deletes

## tRPC Patterns
- Use `publicProcedure` for public endpoints
- Use `protectedProcedure` for authenticated endpoints
- Follow router structure from [apps/server/src/routers/index.ts](mdc:apps/server/src/routers/index.ts)
- Export router types for client consumption

## Authentication
- Use Better Auth for all authentication flows
- Support both web and Expo authentication
- Follow the auth setup in [apps/server/src/lib/auth.ts](mdc:apps/server/src/lib/auth.ts)

## File Organization
- Routes in `src/routers/`
- Database schema in `src/db/schema/`
- Utilities in `src/lib/`
- Main entry point in `src/index.ts`
description:
globs:
alwaysApply: true
---
